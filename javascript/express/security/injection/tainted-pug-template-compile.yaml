rules:
  - id: tainted-pug-template-compile
    message:
      User data from `$USERDATA` is being compiled into the template, which can
      lead to a Server Side Template Injection (SSTI) vulnerability.
    languages:
      - javascript
      - typescript
    severity: WARNING
    mode: taint
    pattern-sources:
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  models.$MODEL.$FUNC(...). ... .then($USERDATA => { ... })
              - pattern-inside: |
                  models.$MODEL.$FUNC(..., $USERDATA, ...). ...
          - metavariable-regex:
              metavariable: $FUNC
              regex: ^(get|find|query)
          - pattern: $USERDATA
      - patterns:
          - pattern-either:
              - pattern-inside: function ... ($REQ, $RES) {...}
              - pattern-inside: function ... ($REQ, $RES, $NEXT) {...}
              - pattern-inside: $APP.get(..., function $FUNC($REQ, $RES) {...})
              - pattern-inside: $APP.get(..., function $FUNC($REQ, $RES, $NEXT) {...})
              - pattern-inside: $APP.post(..., function $FUNC($REQ, $RES) {...})
              - pattern-inside: $APP.post(..., function $FUNC($REQ, $RES, $NEXT) {...})
              - pattern-inside: $APP.put(..., function $FUNC($REQ, $RES) {...})
              - pattern-inside: $APP.put(..., function $FUNC($REQ, $RES, $NEXT) {...})
              - pattern-inside: $APP.head(..., function $FUNC($REQ, $RES) {...})
              - pattern-inside: $APP.head(..., function $FUNC($REQ, $RES, $NEXT) {...})
              - pattern-inside: $APP.delete(..., function $FUNC($REQ, $RES) {...})
              - pattern-inside: $APP.delete(..., function $FUNC($REQ, $RES, $NEXT) {...})
              - pattern-inside: $APP.options(..., function $FUNC($REQ, $RES) {...})
              - pattern-inside: $APP.options(..., function $FUNC($REQ, $RES, $NEXT) {...})
          - pattern-either:
              - pattern: $REQ.query
              - pattern: $REQ.body
              - pattern: $REQ.params
              - pattern: $REQ.cookies
              - pattern: $REQ.headers
    pattern-sinks:
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $PUG = require('pug')
                  ...
              - pattern-inside: |
                  import * as $PUG from 'pug'
                  ...
              - pattern-inside: |
                  $PUG = require('jade')
                  ...
              - pattern-inside: |
                  import * as $PUG from 'jade'
                  ...
          - pattern-either:
              - pattern: $PUG.compile(...)
              - pattern: $PUG.compileClient(...)
              - pattern: $PUG.compileClientWithDependenciesTracked(...)
              - pattern: $PUG.render(...)
              - pattern: pug.compile(...)
              - pattern: pug.compileClient(...)
              - pattern: pug.compileClientWithDependenciesTracked(...)
              - pattern: pug.render(...)
    metadata:
      category: security
      technology:
        - javascript
        - typescript
        - pug
      owasp:
        - A01:2017 - Injection
        - A03:2021 - Injection
